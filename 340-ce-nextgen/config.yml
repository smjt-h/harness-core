# main setup configs
server:
  rootPath: /ccm/api
  applicationConnectors:
    - type: https
      port: 6340
      keyStorePath: keystore.jks
      keyStorePassword: password
      trustStorePath: ${JAVA_HOME}/jre/lib/security/cacerts
      certAlias: localhost
      validateCerts: false
      maxRequestHeaderSize: 100KiB
    - type: http
      port: 7340
      maxRequestHeaderSize: 100KiB
  adminConnectors:
    - type: https
      port: 9340
      keyStorePath: keystore.jks
      keyStorePassword: password
      trustStorePath: ${JAVA_HOME}/jre/lib/security/cacerts
      certAlias: localhost
      validateCerts: false
  requestLog:
    appenders: []
  maxThreads: 1024

enableAuth: true

allowedOrigins:
  - "*"

logging:
  level: INFO
  loggers:
    org.glassfish.jersey: INFO
    allbegray.slack: WARN
    org.glassfish.jersey.server.ServerRuntime.Responder: "OFF"
  appenders:
    - type: console
      threshold: TRACE
      target: STDOUT
      logFormat: "%date{ISO8601} %green([%thread]) %highlight(%-5level) %cyan(%logger) - %msg %yellow(%replace(%mdc){'(.+)', '[$1]'}) %n"
    - type: gke-console
      threshold: TRACE
      target: STDOUT
      stackdriverLogEnabled: false

events-mongo:
  uri: mongodb://localhost:27017/events
  connectTimeout: 30000
  serverSelectionTimeout: 90000
  maxConnectionIdleTime: 600000
  connectionsPerHost: 300
  indexManagerMode: AUTO
  aliasDBName: events

timescaledb:
  timescaledbUrl: "jdbc:postgresql://localhost:5432/harness"
  timescaledbUsername: "postgres"
  timescaledbPassword: ""
  connectTimeout: 10
  socketTimeout: 30
  logUnclosedConnections: false
  loggerLevel: OFF
  isHealthCheckNeeded: false

ngManagerServiceSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM

jwtAuthSecret: dOkdsVqdRPPRJG31XU0qY4MPqmBBMk0PTAGIKM6O7TGqhjyxScIdJe80mwh5Yb5zF3KxYBHw6B3Lfzlq
jwtIdentityServiceSecret: HVSKUYqD4e5Rxu12hFDdCJKGM64sxgEynvdDhaOHaTHhwwn0K4Ttr0uoOxSsEVYNrUU=

eventsFramework:
  redis:
    sentinel: false
    masterName: "test"
    redisUrl: "dummyRedisUrl" # "redis://localhost:6379"
    sentinelUrls:
      - "redis://redis1:26379"
      - "redis://redis2:26379"
      - "redis://redis3:26379"
    envNamespace: ""
    readMode: MASTER
    nettyThreads: 16
    useScriptCache: true
    userName: ""
    password: ""
    sslConfig:
      enabled: false
      CATrustStorePath: "/tmp/ca_trust_store"
      CATrustStorePassword: ""

# feature configs
managerClientConfig:
  baseUrl: http://localhost:3457/api/
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15

ngManagerClientConfig:
  baseUrl: http://localhost:7457/
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15
  
enforcementClientConfiguration:
  enforcementCheckEnabled: false

grpcClient:
  target: localhost:9880
  authority: localhost

# has to be comma ',' delimited flags
featureFlagsEnabled: ""
deployMode: KUBERNETES

cfClientConfig:
  apiKey: ""
  configUrl: "https://config.feature-flags.uat.harness.io/api/1.0"
  eventUrl: "https://event.feature-flags.uat.harness.io/api/1.0"
  analyticsEnabled: true
  connectionTimeout: 10000
  readTimeout: 45000
  retries: 6
  sleepInterval: 5000

featureFlagConfig:
  featureFlagSystem: LOCAL
  syncFeaturesToCF: false

gcpConfig:
  gcpProjectId: gcpProjectIdPlaceHolder
  gcpAwsConnectorCrudPubSubTopic: "ce-aws-connector-crud"

ceAzureSetupConfig:
  azureAppClientId: azureAppClientIdPlaceholder
  azureAppClientSecret: azureAppClientSecretplaceholder
  enableFileCheckAtSource: false

awsConfig:
  accessKey: accessKey_placeholder
  secretKey: secretKey_placeholder
  destinationBucket: destinationBucket_placeholder
  destinationBucketsCount : 1
  harnessAwsAccountId: 108817434118
  awsConnectorTemplate: https://continuous-efficiency-templates.s3.amazonaws.com/templateOptimOnly.yaml

hostname: ${HOSTNAME:-localhost}
basePathPrefix: ${BASE_PATH_PREFIX:-""}

secretsConfiguration:
  secretResolutionEnabled: false
  gcpSecretManagerProject: ccm-play
