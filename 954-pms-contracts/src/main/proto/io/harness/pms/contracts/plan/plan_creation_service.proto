// Copyright 2021 Harness Inc. All rights reserved.
// Use of this source code is governed by the PolyForm Shield 1.0.0 license
// that can be found in the licenses directory at the root of this repository, also available at
// https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.

syntax = "proto3";

package io.harness.pms.contracts.plan;

option java_multiple_files = true;

import "io/harness/pms/contracts/plan/plan_node_proto.proto";
import "io/harness/pms/contracts/plan/graph_layout.proto";
import "io/harness/pms/contracts/plan/variables.proto";
import "io/harness/pms/contracts/plan/execution_metadata.proto";
import "io/harness/pms/contracts/triggers/trigger_payload.proto";
import "970-ng-commons/src/main/proto/io/harness/eventsframework/schemas/entity/entity_detail.proto";

service PlanCreationService {
  rpc createPlan(PlanCreationBlobRequest) returns (PlanCreationResponse);
  rpc createFilter(FilterCreationBlobRequest) returns (FilterCreationResponse);
  rpc createVariablesYaml(VariablesCreationBlobRequest) returns (VariablesCreationResponse);
}

message PlanCreationBlobRequest {
  map<string, YamlFieldBlob> dependencies = 1 [deprecated = true];
  map<string, PlanCreationContextValue> context = 4;
  Dependencies deps = 5;
}

message PlanCreationResponse {
  oneof response {
    ErrorResponse errorResponse = 1;
    PlanCreationBlobResponse blobResponse = 2;
  }
}

message PlanCreationBlobResponse {
  map<string, PlanNodeProto> nodes = 1;
  map<string, YamlFieldBlob> dependencies = 2 [deprecated = true];
  string startingNodeId = 3;
  map<string, PlanCreationContextValue> context = 4;
  GraphLayoutInfo graphLayoutInfo = 5;
  Dependencies deps = 6;
  YamlUpdates yamlUpdates = 7;
}

message GraphLayoutInfo {
  string startingNodeId = 1;
  map<string, GraphLayoutNode> layoutNodes = 2;
}

message PlanCreationContextValue {
  oneof value {
    string stringValue = 1;
    ExecutionMetadata metadata = 2;
  }
  triggers.TriggerPayload triggerPayload = 3;
  string accountIdentifier = 4;
  string orgIdentifier = 5;
  string projectIdentifier = 6;
}

message YamlFieldBlob {
  string name = 1;
  bytes blob = 2;
}

message FilterCreationBlobRequest {
  map<string, YamlFieldBlob> dependencies = 1 [deprecated = true];
  SetupMetadata setupMetadata = 2;
  Dependencies deps = 3;
}

message FilterCreationResponse {
  oneof response {
    ErrorResponse errorResponse = 1;
    FilterCreationBlobResponse blobResponse = 2;
  }
}

message FilterCreationBlobResponse {
  string filter = 1;
  uint32 stageCount = 2;
  map<string, YamlFieldBlob> dependencies = 3 [deprecated = true];
  map<string, YamlFieldBlob> resolvedDependencies = 4 [deprecated = true];
  string startingNodeId = 6;
  repeated io.harness.eventsframework.schemas.entity.EntityDetailProtoDTO referredEntities = 7;
  repeated string stageNames = 8;
  Dependencies deps = 9;
  YamlUpdates yamlUpdates = 10;
  Dependencies resolvedDeps = 11;
}

message VariablesCreationBlobRequest {
  map<string, YamlFieldBlob> dependencies = 1 [deprecated = true];
  VariablesCreationMetadata metadata = 2;
  Dependencies deps = 3;
}

message VariablesCreationResponse {
  oneof response {
    ErrorResponse errorResponse = 1;
    VariablesCreationBlobResponse blobResponse = 2;
  }
}

message VariablesCreationBlobResponse {
  map<string, YamlProperties> yamlProperties = 1;
  map<string, YamlFieldBlob> dependencies = 2 [deprecated = true];
  map<string, YamlFieldBlob> resolvedDependencies = 3 [deprecated = true];
  repeated ErrorResponse errorResponse = 4;
  map<string, YamlOutputProperties> yamlOutputProperties = 5 [deprecated = true];
  Dependencies deps = 6;
  YamlUpdates yamlUpdates = 7;
  Dependencies resolvedDeps = 8;
  map<string, YamlExtraProperties> yamlExtraProperties = 9;
}

message ErrorResponse {
  repeated string messages = 1;
}

message SetupMetadata {
  string accountId = 1;
  string projectId = 2;
  string orgId = 3;
  bytes gitSyncBranchContext = 4;
}

message VariablesCreationMetadata {
  bytes gitSyncBranchContext = 1;
  map<string, string> metadata = 2;
}

message Dependencies {
  string yaml = 1;
  map<string, string> dependencies = 2;
  // Metadata regarding the dependency added in above dependencies map
  map<string, Dependency> dependencyMetadata = 3;
}

message Dependency {
  map<string, bytes> metadata = 2;
}

// TODO: Looking forward to implement this Dependency model
// message Dependencies {
//  string yaml = 1;
//  repeated Dependency dependencies = 2;
//}
//
// message Dependency {
//  string fqn = 1;
//  map<string, bytes> metadata = 2;
//}

message YamlUpdates {
  // value can be json or yaml doesn't matter, but both structure should be interchangeable
  map<string, string> fqnToYaml = 1;
}
