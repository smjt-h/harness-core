server:
  applicationConnectors:
    - type: http
      port: 7457
      maxRequestHeaderSize: 100KiB
  adminConnectors:
    - type: https
      port: 7091
      keyStorePath: keystore.jks
      keyStorePassword: password
      trustStorePath: ${JAVA_HOME}/jre/lib/security/cacerts
      certAlias: localhost
      validateCerts: false
  requestLog:
    appenders: []
  maxThreads: 1024

nextGen:
  managerServiceSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM
  userVerificationSecret: dyBvaWVmbGRrYyB6aHpjeHZvaWxzamt6ZGN6c2RhZmh5dBrebhmnjryRe54rX43W3565ytgbsDvnjws5

allowedOrigins:
  - https://localhost:8181
  - https://127.0.0.1:8181
  - http://localhost:8000
  - http://127.0.0.1:8000
  - https://localhost:8000
  - https://127.0.0.1:8000

logging:
  level: INFO
  loggers:
    org.glassfish.jersey: WARN
    allbegray.slack: WARN
    org.glassfish.jersey.server.ServerRuntime.Responder: "OFF"
  appenders:
    - type: console
      threshold: TRACE
      target: STDOUT
      logFormat: "%date{ISO8601} %green([%thread]) %highlight(%-5level) %cyan(%logger) - %msg %yellow(%replace(%mdc){'(.+)', '[$1]'}) %n"

mongo:
  uri: mongodb://localhost:27017/ng-harness
  connectTimeout: 30000
  serverSelectionTimeout: 90000
  maxConnectionIdleTime: 600000
  connectionsPerHost: 300
  indexManagerMode: AUTO

eventsFramework:
  redis:
    sentinel: false
    masterName: "mymaster"
    redisUrl: "dummyRedisUrl"
    sentinelUrls:
      - "redis://localhost:26379"
      - "redis://localhost:26380"
      - "redis://localhost:26381"
    envNamespace: ""
    readMode: MASTER
    nettyThreads: 16
    useScriptCache: true
    userName: ""
    password: ""

redisLockConfig:
  sentinel: false
  masterName: "test"
  redisUrl: "redis://localhost:6379"
  sentinelUrls:
    - "redis://localhost:26379"
    - "redis://localhost:26379"
    - "redis://localhost:26379"
  envNamespace: ""
  readMode: MASTER
  nettyThreads: 16
  useScriptCache: true

# [secondary-db]: Uncomment the following if you want to connect to another database
#secondary-mongo:
#  uri: mongodb://localhost:27017/cd-nextgen-secondary
#  connectTimeout: 30000
#  serverSelectionTimeout: 90000
#  maxConnectionIdleTime: 600000
#  connectionsPerHost: 300
#  indexManagerMode: AUTO

managerClientConfig:
  baseUrl: http://localhost:3457/
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15

ngManagerClientConfig:
  baseUrl: http://localhost:7457/
  connectTimeOutSeconds: 15
  readTimeOutSeconds: 15

grpcClient:
  target: localhost:9880
  authority: localhost

grpcServer:
  connectors:
    - port: 9980
      secure: true
      keyFilePath: key.pem
      certFilePath: cert.pem
    - port: 9979

pmsSdkGrpcServerConfig:
  connectors:
    - port: 12101

pmsGrpcClientConfig:
  target: localhost:12011
  authority: localhost

gitSyncServerConfig:
  connectors:
    - port: 13001
      secure: true
      keyFilePath: key.pem
      certFilePath: cert.pem
    - port: 13002

shouldDeployWithGitSync: true

fileServiceConfiguration:
  fileStorageMode: MONGO
  clusterName: ""

shouldConfigureWithPMS: false

ceAwsSetupConfig:
  accessKey: ce_aws_accessKey_placeholder
  secretKey: ce_aws_secretKey_placeholder
  destinationBucket: ce_aws_destinationBucket_placeholder
  templateURL: https://continuous-efficiency-templates.s3.amazonaws.com/templateOptimOnly.yaml

ciDefaultEntityConfiguration:
  harnessImageUseName: harnessdev
  harnessImagePassword: harnessPass

resourceGroupClientConfig:
  serviceConfig:
    baseUrl: http://localhost:7457/
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
  secret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM

notificationClient:
  messageBroker:
    type: MONGO
    uri: mongodb://localhost:27017/notification
    connectTimeout: 30000
    serverSelectionTimeout: 90000
    maxConnectionIdleTime: 600000
    connectionsPerHost: 300
  httpClient:
    baseUrl: http://localhost:9005/api/
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
  secrets:
    notificationClientSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM

logStreamingServiceConfig:
  baseUrl: http://localhost:8079
  serviceToken: token

segmentConfiguration:
  enabled: false
  url: "segment_url_place_holder"
  apiKey: "segment_api_key"

accessControlClient:
  enableAccessControl: false

accessControlAdminClient:
  accessControlServiceConfig:
    baseUrl: http://localhost:9006/api/
    connectTimeOutSeconds: 15
    readTimeOutSeconds: 15
  accessControlServiceSecret: IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM
  mockAccessControlService: true

gitGrpcClientConfigs:
  pms:
    target: localhost:12011
    authority: localhost
  core:
    target: localhost:13001
    authority: localhost

gitSdkConfiguration:
  gitSdkGrpcServerConfig:
    # For ng it will be in process server so this isn't required.
    connectors:
      - port: 13001
        secure: true
        keyFilePath: key.pem
        certFilePath: cert.pem
      - port: 13002
  gitManagerGrpcClientConfig:
    target: localhost:13001
    authority: localhost
  scmConnectionConfig:
    url: localhost:8091

baseUrls:
  currentGenUiUrl: http://localhost:8181/#/

cfClientConfig:
  apiKey: ""
  configUrl: "https://config.feature-flags.uat.harness.io/api/1.0"
  eventUrl: "https://event.feature-flags.uat.harness.io/api/1.0"
  analyticsEnabled: true
  connectionTimeout: 10000
  readTimeout: 30000

cfMigrationConfig:
  enabled: false
  adminUrl : "http://localhost:3000/api/1.0"
  apiKey: ""
  account: "default"
  org: "default_org"
  project: "project1"
  environment: "environment1"
  connectionTimeout: 10000
  readTimeout: 30000

featureFlagConfig:
  featureFlagSystem: LOCAL
  syncFeaturesToCF: false

yamlSchemaClientConfig:
  yamlSchemaHttpClientMap:
    cvng:
      serviceHttpClientConfig:
        baseUrl: http://localhost:6457/cv/api/
        connectTimeOutSeconds: 15
        readTimeOutSeconds: 15
      secret: "IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM"

signupNotificationConfiguration:
  projectId: "projectId_place_holder"
  bucketName: "bucketName_place_holder"
  templates:
    verify:
      gcsFileName: "email_verify.txt"
      templateId: "email_verify"
    confirm:
      gcsFileName: "signup_confirmation.txt"
      templateId: "signup_confirmation"
  expireDurationInMinutes: 60